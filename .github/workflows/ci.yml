name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        build-type: [ Release ]
        cxx-compiler: [ g++, clang++, cl ]
        exclude:
          - os: ubuntu-latest
            cxx-compiler: cl

    steps:
      - uses: actions/checkout@v5

      - name: Set environment
        id: env-win
        if: matrix.os == 'windows-latest'
        run: |
          echo "nproc=%NUMBER_OF_PROCESSORS%" >> "$GITHUB_ENV"

      - name: Set environment
        id: env-linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "nproc=$(nproc)" >> "$GITHUB_ENV"
          echo "CMAKE_GENERATOR=Ninja" >> "$GITHUB_ENV"

      - name: Get build dir
        id: vars
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure
        run: >
          cmake
          -B ${{ steps.vars.outputs.build-output-dir }}
          -S ${{ github.workspace }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cxx-compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}
          -DUSE_TIDY=ON

      - name: Build
        run: >
          cmake --build ${{ steps.vars.outputs.build-output-dir }}
          --config ${{ matrix.build-type }}
          --parallel ${{ env.nproc }}

      - name: Test
        working-directory: ${{ steps.vars.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build-type }}
